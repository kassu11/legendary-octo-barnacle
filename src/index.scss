@layer reset, base, utility, layout, components, resize;

@layer reset {
  *, *::before, *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
  }

  body {
    -webkit-font-smoothing: antialiased;
  }

  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }

  input, button, textarea, select {
    font: inherit;
    color: inherit;
    background-color: var(--background-500);
  }

  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }

  #root {
    isolation: isolate;
  }

}

@layer base {
  /* @link https://utopia.fyi/type/calculator?c=400,14,1.125,1240,16,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */
  :root {
    --fs-200: clamp(0.64rem, 0.7158rem + -0.0978vw, 0.6914rem);
    --fs-300: clamp(0.7778rem, 0.7672rem + 0.0423vw, 0.8rem);
    --fs-400: clamp(0.875rem, 0.8155rem + 0.2381vw, 1rem);
    --fs-500: clamp(0.9844rem, 0.8579rem + 0.506vw, 1.25rem);
    --fs-600: clamp(1.1074rem, 0.8907rem + 0.8668vw, 1.5625rem);
    --fs-700: clamp(1.2458rem, 0.9091rem + 1.3472vw, 1.9531rem);
    --fs-800: clamp(1.4016rem, 0.9064rem + 1.9806vw, 2.4414rem);
    --fs-900: clamp(1.5768rem, 0.8744rem + 2.8095vw, 3.0518rem);

    --background-600: oklch(0.30 0 0);
    --background-500: oklch(0.25 0 0);
    --background-400: oklch(0.20 0 0);
    --background-350: oklch(0.175 0 0);
    --background-300: oklch(0.15 0 0);
    --background-200: oklch(0.10 0 0);

    --lime-400: oklch(0.85 0.34 148.22);
    --crimson-400: oklch(0.66 0.29 10.59);
    --red-400: oklch(0.67 0.28 26.71);
    --red-100: oklch(0.05 0.28 26.71);
    --dark-blue-400: oklch(0.35 0.23 263.34);

    --text-500: oklch(0.97 0 0);
    --text-400: oklch(0.95 0 0);
    --text-300: oklch(0.75 0 0);
    --text-200: oklch(0.65 0 0);

    --shadow-400: oklab(0 0 0 / .8);
    --shadow-300: oklab(0 0 0 / .9);
  }

  html {
    color-scheme: dark;
  }

  body {
    background-color: var(--background-200);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: var(--fs-400);
    color: var(--text-400);
  }


  main#page-content {
    min-height: 100vh;
  }

  button {
    border: .1rem solid var(--background-600);
    border-radius: .25rem;
    cursor: pointer;
  }
}

@layer utility {
  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .hidden {
    display: none;
  }

  .line-clamp {
    -webkit-box-orient: vertical;
    -webkit-line-clamp: var(--line-clamp, 3); 
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .list-status {
    width: 0.8em;
    height: 0.8em;
    margin-right: .25em;
    border-radius: 50%;
    display: inline-block;
    text-align: center;
    background-color: var(--status-color, purple);
  }

  [data-status="COMPLETED"] {
    --status-color: lime;
  }
  [data-status="CURRENT"] {
    --status-color: skyblue;
  }
  [data-status="DROPPED"] {
    --status-color: red;
  }
  [data-status="PAUSED"] {
    --status-color: crimson;
  }
  [data-status="PLANNING"] {
    --status-color: orange;
  }
  [data-status="REPEATING"] {
    --status-color: blue;
  }

  :where(ol, ul) {
    &:where(.grid-column-auto-fill, .grid-row-clamp, .grid-reel-auto-fill, .grid-reel-repeat, .flex-space-between) {
      list-style: none;
      padding: 0;
    }
  }

  .grid-column-auto-fill {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, var(--grid-column-width, 20rem)), 1fr));
    gap: .5rem;
  }

  .grid-column-auto-fit {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--grid-column-width, 20rem)), 1fr));
    gap: .5rem;
  }

  .grid-row-clamp {
    display: grid;
    grid-template-rows: repeat(var(--grid-max-rows, 1), auto);
    grid-auto-rows: 0px;
    grid-column-gap: var(--grid-gap, .5rem);
    grid-row-gap: 0;
    overflow: hidden;
    > * {
      margin-bottom: var(--grid-gap, .5rem);
    }
  }

  .grid-reel-repeat {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: calc((100% / var(--amount, 8.5)) - (var(--gap, .5rem) - var(--gap, .5rem) / (var(--amount, 8.5) - 1)));
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    padding-inline: var(--padding, 1rem);
    scroll-padding: var(--padding, 1rem);
    gap: var(--gap, .5rem);
    // Don't ask, but background color fixes the scrollbar for Chromium: 136.0.7103.93
    background-color: inherit;

    > * {
      scroll-snap-align: start;
    }
  }

  .grid-reel-auto-fill {
    --100: 100% + var(--padding, 1rem);
    --round-distance: round(up, var(--100), var(--grid-column-width, 20rem));
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: calc(
      min(
        // This part calculates the column size using: (100% - gap * (n-1)) / n
                                                                              // This variables makes it possible to cap column count, default 99 (uncapped)
                                                                                                                                                                                           // This part will add a very large number if the container width is too small or big
                                                                                                                                                                                           // This will invalidate the whole row, because we are inside min function (2*size > width >= size)
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 0), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 1), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 1) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 1)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 1), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 2), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 2) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 2)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 2), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 3), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 3) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 3)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 3), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 4), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 4) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 4)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 4), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 5), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 5) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 5)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 5), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 6), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 6) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 6)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 6), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 7), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 7) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 7)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 7), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 8), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 8) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 8)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 8), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 9), var(--grid-max-column-count, 99))  + max((var(--round-distance) - var(--grid-column-width, 20rem) * 9) * 9999 , (var(--round-distance) - var(--grid-column-width, 20rem) * 9)  * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 9), var(--grid-max-column-count, 99))))  / min((var(--spill-ratio, .5) + 10), var(--grid-max-column-count, 99)) + max((var(--round-distance) - var(--grid-column-width, 20rem) * 10) * 9999, (var(--round-distance) - var(--grid-column-width, 20rem) * 10) * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 10), var(--grid-max-column-count, 99)))) / min((var(--spill-ratio, .5) + 11), var(--grid-max-column-count, 99)) + max((var(--round-distance) - var(--grid-column-width, 20rem) * 11) * 9999, (var(--round-distance) - var(--grid-column-width, 20rem) * 11) * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 11), var(--grid-max-column-count, 99)))) / min((var(--spill-ratio, .5) + 12), var(--grid-max-column-count, 99)) + max((var(--round-distance) - var(--grid-column-width, 20rem) * 12) * 9999, (var(--round-distance) - var(--grid-column-width, 20rem) * 12) * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 12), var(--grid-max-column-count, 99)))) / min((var(--spill-ratio, .5) + 13), var(--grid-max-column-count, 99)) + max((var(--round-distance) - var(--grid-column-width, 20rem) * 13) * 9999, (var(--round-distance) - var(--grid-column-width, 20rem) * 13) * -9999),
        ((var(--100)) - (var(--gap, .5rem) * min((var(--spill-ratio, .5) + 13), var(--grid-max-column-count, 99)))) / min((var(--spill-ratio, .5) + 14), var(--grid-max-column-count, 99)) + max((var(--round-distance) - var(--grid-column-width, 20rem) * 14) * 9999, (var(--round-distance) - var(--grid-column-width, 20rem) * 14) * -9999),
        var(--grid-column-width, 20rem) * 2
      )
    );
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    padding-inline: var(--padding, 1rem);
    scroll-padding: var(--padding, 1rem);
    gap: var(--gap, .5rem);
    // Don't ask, but background color fixes the scrollbar for Chromium: 136.0.7103.93
    background-color: inherit;

    > * {
      scroll-snap-align: start;
    }
  }


  .full-span {
    grid-column: 1/-1;
  }

  .flex-space-between {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: .5rem;
  }

  .inline-container {
    container-type: inline-size;
  }
}

* + * {
  // background-color: rgba(red, .1);
}
